/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dao.LoginDao;
import dao.LoginDaoImpl;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.html.HTML;
import model.Lesson;
import model.Login;
import model.Payment;
import model.Student;
import model.Teacher;
import service.CourseService;
import service.LoginService;
import service.LoginServiceImpl;

/**
 *
 * @author Asus
 */
public class MainFrame extends javax.swing.JFrame {

    private String globBtnName;
    private CourseService courseService;
    private Login login;
    List<Student> studentList = null;
    LoginDao loginDao=new LoginDaoImpl();
    LoginService loginService=new LoginServiceImpl(loginDao);

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    public MainFrame(CourseService courseService) {
        initComponents();
        this.courseService = courseService;
        changeBtnEnable(false);
        //showStudentData();
    }

    MainFrame(CourseService courseService, Login login) {
        initComponents();
        this.courseService=courseService;
        this.login=login;
        changeBtnEnable(false);
        jLabel2.setText(login.getName()+" "+login.getSurname());
        grantRole();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        newBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        delBtn = new javax.swing.JButton();
        keywordTxt = new javax.swing.JTextField();
        searchTxt = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        studentBtn = new javax.swing.JButton();
        teacherBtn = new javax.swing.JButton();
        lessonBtn = new javax.swing.JButton();
        paymentBtn = new javax.swing.JButton();
        registrationDataBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        newBtn.setText("New");
        newBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBtnActionPerformed(evt);
            }
        });

        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        delBtn.setText("Delete");
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });

        keywordTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keywordTxtKeyReleased(evt);
            }
        });

        searchTxt.setText("Search");
        searchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTxtActionPerformed(evt);
            }
        });

        logoutBtn.setText("Log Out");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Welcome,");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(newBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(delBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(keywordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(searchTxt)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(177, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keywordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        studentBtn.setText("Student Data");
        studentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentBtnActionPerformed(evt);
            }
        });

        teacherBtn.setText("Teacher Data");
        teacherBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherBtnActionPerformed(evt);
            }
        });

        lessonBtn.setText("Lesson");
        lessonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lessonBtnActionPerformed(evt);
            }
        });

        paymentBtn.setText("Payment Data");
        paymentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentBtnActionPerformed(evt);
            }
        });

        registrationDataBtn.setText("Regsitration Data");
        registrationDataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrationDataBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teacherBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lessonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paymentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registrationDataBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(studentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(teacherBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(lessonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(paymentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(registrationDataBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void teacherBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherBtnActionPerformed
        showTeacherData();
        changeBtnEnable(true);
        globBtnName = "teacher";
    }//GEN-LAST:event_teacherBtnActionPerformed

    private void studentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentBtnActionPerformed

        List<Student> studentList = new ArrayList<>();
        try {
            studentList = courseService.getstudentList();
            showStudentData(studentList);
            changeBtnEnable(true);
            globBtnName = "student";

        } catch (Exception ex) {
            ex.printStackTrace();
        }


    }//GEN-LAST:event_studentBtnActionPerformed

    private void lessonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lessonBtnActionPerformed
        showLessonData();
        changeBtnEnable(true);
        globBtnName = "lesson";

    }//GEN-LAST:event_lessonBtnActionPerformed

    private void newBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBtnActionPerformed
        switch (globBtnName) {
            case "student":
                NewStudentFrame newStudentFrame = new NewStudentFrame(courseService);
                newStudentFrame.setVisible(true);
                break;
            case "teacher":
                NewTeacherFrame newTeacherFrame = new NewTeacherFrame();
                newTeacherFrame.setVisible(true);
                break;
            case "lesson":
                NewLessonFrame newLessonFrame = new NewLessonFrame();
                newLessonFrame.setVisible(true);
                break;
            case "payment":
                NewPaymentFrame newPaymentFrame = new NewPaymentFrame(courseService);
                newPaymentFrame.setVisible(true);
                break;
            case "reg":
                NewRegistrationFrame newRegistrationFrame=new NewRegistrationFrame(courseService,loginService);
                newRegistrationFrame.setVisible(true);
                break;
            default:
                JOptionPane.showMessageDialog(null, "Please,select menu", "Warning", JOptionPane.WARNING_MESSAGE);
                break;
        }

    }//GEN-LAST:event_newBtnActionPerformed

    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        Long selectedId = (Long) jTable1.getValueAt(selectedRow, 0);
        try {

            switch (globBtnName) {
                case "student": {
                    int isDeleted = JOptionPane.showConfirmDialog(null, "Are you sure", "Delete student", JOptionPane.YES_NO_OPTION);
                    if (isDeleted == JOptionPane.YES_OPTION) {
                        boolean isDeleteStudent = courseService.deleteStudent(selectedId);
                        if (isDeleteStudent) {
                            JOptionPane.showMessageDialog(null, "Student has been deleted succesfully!");
                            studentList = courseService.getstudentList();
                            showStudentData(studentList);
                        } else {
                            JOptionPane.showMessageDialog(null, "Student has not been deleted succesfully!");
                        }
                    }

                }
                break;
                case "teacher":
                    break;
                case "lesson":
                    break;
                default:
                    break;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
     }//GEN-LAST:event_delBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        Long selectedId = (Long) jTable1.getValueAt(selectedRow, 0);
        switch (globBtnName) {
            case "student":
                EditStudentFrame editStudentFrame = new EditStudentFrame(selectedId, courseService);
                editStudentFrame.setVisible(true);
                break;
            case "teacher":
                break;
            case "lesson":
                break;
            default:
                break;
        }

    }//GEN-LAST:event_editBtnActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 2) {
            editBtnActionPerformed(null);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void searchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTxtActionPerformed
        String keyWord = keywordTxt.getText();
        try {

            switch (globBtnName) {
                case "student":
                    studentList = courseService.searchStudentData(keyWord);
                    showStudentData(studentList);
                    break;
                case "teacher":
                    break;
                case "lesson":
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Please select from menu");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_searchTxtActionPerformed

    private void keywordTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keywordTxtKeyReleased
        searchTxtActionPerformed(null);        // TODO add your handling code here:
    }//GEN-LAST:event_keywordTxtKeyReleased

    private void paymentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentBtnActionPerformed
        globBtnName = "payment";
        changeBtnEnable(true);
        showPaymentData();


    }//GEN-LAST:event_paymentBtnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        this.dispose();
        LoginFrame loginFrame=new LoginFrame();
        loginFrame.setVisible(true);


    }//GEN-LAST:event_logoutBtnActionPerformed

    private void registrationDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrationDataBtnActionPerformed
           globBtnName="reg";
           changeBtnEnable(true);
 
    }//GEN-LAST:event_registrationDataBtnActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField keywordTxt;
    private javax.swing.JButton lessonBtn;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JButton newBtn;
    private javax.swing.JButton paymentBtn;
    private javax.swing.JButton registrationDataBtn;
    private javax.swing.JButton searchTxt;
    private javax.swing.JButton studentBtn;
    private javax.swing.JButton teacherBtn;
    // End of variables declaration//GEN-END:variables

    private void showStudentData(List<Student> studentList) {
        try {
            DefaultTableModel model = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            };
            jTable1.setModel(model);
            model.addColumn("id");//bunu yazmasaq update islemeyecek asagida 0 elemisik olculerini gorunmesin deye
            model.addColumn("№");
            model.addColumn("Name");
            model.addColumn("Surname");
            model.addColumn("Address");
            model.addColumn("Date of Birth");
            model.addColumn("Phone");
            model.addColumn("Email");

            int i = 0;
            for (Student student : studentList) {
                i++;
                Object[] data = new Object[]{
                    student.getId(), i, student.getName(), student.getSurname(), student.getAdress(), student.getDob(), student.getPhone(),student.getEmail()
                };
                model.addRow(data);//bir-bir setirleri duzeldir ve men dovrdece olari tableye elave edirem.
            }
            jTable1.getColumnModel().getColumn(0).setMinWidth(0);
            jTable1.getColumnModel().getColumn(0).setWidth(0);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(0);

            model.fireTableDataChanged();//deyisiklerim gorunsun deyedir
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void showTeacherData() {
        try {
            List<Teacher> teacherList = courseService.getTeacherList();
            int i = 0;
            DefaultTableModel model = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            jTable1.setModel(model);
            model.addColumn("№");
            model.addColumn("Name");
            model.addColumn("Surname");
            model.addColumn("Address");
            model.addColumn("Date of Birth");
            for (Teacher teacher : teacherList) {
                i++;
                Object[] data = new Object[]{
                    teacher.getId(), i, teacher.getName(), teacher.getSurname(), teacher.getAdress(), teacher.getDob(), teacher.getPhone()
                };
                model.addRow(data);
            }
            jTable1.getColumnModel().getColumn(0).setMinWidth(0);
            jTable1.getColumnModel().getColumn(0).setWidth(0);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
            model.fireTableDataChanged();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    private void showLessonData() {
        try {
            List<Lesson> lessonList = courseService.getLessonList();
            DefaultTableModel model = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            int i = 0;
            jTable1.setModel(model);
            model.addColumn("№");
            model.addColumn("Lesson name");
            model.addColumn("Lesson time");
            model.addColumn("Lesson price");
            for (Lesson lesson : lessonList) {
                i++;
                Object[] data = new Object[]{
                    lesson.getId(), i, lesson.getLessonName(), lesson.getLessonTime(), lesson.getLessonPrice()

                };
                model.addRow(data);
            }
            jTable1.getColumnModel().getColumn(0).setMinWidth(0);
            jTable1.getColumnModel().getColumn(0).setWidth(0);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
            model.fireTableDataChanged();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void changeBtnEnable(boolean isEnable) {
        newBtn.setEnabled(isEnable);
        editBtn.setEnabled(isEnable);
        delBtn.setEnabled(isEnable);
        keywordTxt.setText("");
    }

    private void showPaymentData() {
        try {

            DefaultTableModel model = new DefaultTableModel();
            jTable1.setModel(model);
            model.addColumn("№");
            model.addColumn("Student FullName");
            model.addColumn("Lesson Name");
            model.addColumn("Teacher FullName");
            model.addColumn("Amount");
            model.addColumn("Payment date");
            List<Payment> paymentList = courseService.getPaymentList();
            for (Payment payment : paymentList) {
                Object[] data = new Object[]{
                    payment.getId(), payment.getStudent().getName() + " " + payment.getStudent().getSurname(), payment.getLesson().getLessonName(), payment.getTeacher().getName() + " " + payment.getTeacher().getSurname(), payment.getAmount(), payment.getPayDate()
                };
                model.addRow(data);
            }
            model.fireTableDataChanged();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void grantRole() {
        if(login.getRole().getRoleName().equalsIgnoreCase("Role_Student"))
        {
            newBtn.setVisible(false);
            editBtn.setVisible(false);
            delBtn.setVisible(false);
            paymentBtn.setVisible(false);
            studentBtn.setVisible(false);
        }
        else if(login.getRole().getRoleName().equalsIgnoreCase("Role_teacher"))
        {
            newBtn.setVisible(false);
            editBtn.setVisible(false);
            delBtn.setVisible(false);
            paymentBtn.setVisible(false);
            teacherBtn.setVisible(false);
        }
        else
        {
            
        }
    }

}
